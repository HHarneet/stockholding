---
- name: Ensure events that modify the sudo log file are collected
  hosts: all
  become: true

  tasks:

    - name: Check if SELinux is enforcing
      command: getenforce
      register: selinux_status
      changed_when: false
      failed_when: false

    - name: Set SELinux to permissive if enforcing
      command: setenforce 0
      when: selinux_status.stdout == "Enforcing"
      notify: Revert SELinux to enforcing

    - name: Check if audit system is in immutable mode
      command: auditctl -s
      register: audit_status
      changed_when: false

    - name: Parse audit immutable setting
      set_fact:
        audit_immutable: "{{ (audit_status.stdout_lines | select('search', '^immutable') | list | first).split()[-1] | int }}"
      when: audit_status.stdout_lines | select('search', '^immutable') | list | length > 0

    - name: Set audit_immutable to 0 if not found
      set_fact:
        audit_immutable: 0
      when: audit_status.stdout_lines | select('search', '^immutable') | list | length == 0

    - name: Disable immutable mode if necessary
      command: auditctl -e 0
      when: audit_immutable == 1

    - name: Ensure the logfile directive is set in sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: '^Defaults\s+logfile='
        line: 'Defaults logfile="/var/log/sudo.log"'
        validate: '/usr/sbin/visudo -cf %s'
      notify: Reload sudoers

    - name: Set sudo_log_file variable
      set_fact:
        sudo_log_file: "{{ lookup('pipe', 'grep -r logfile /etc/sudoers* | sed -e \"s/.*logfile=//;s/,? .*//\" -e \"s/\\\"\\\"//g\"') | trim }}"

    - name: Escape sudo log file path for audit rule
      set_fact:
        sudo_log_file_escaped: "{{ sudo_log_file | regex_replace('/', '\\\\/') }}"

    - name: Add audit rule for sudo log file if not present
      lineinfile:
        path: /etc/audit/rules.d/50-sudo.rules
        line: "-w {{ sudo_log_file }} -p wa -k sudo_log_file"
        create: yes
        state: present
      when: sudo_log_file != ""

    - name: Reload audit rules
      command: augenrules --load
      ignore_errors: yes

    - name: Verify audit rule for sudo log file is applied
      command: "auditctl -l | grep -E \"^ *-w.*{{ sudo_log_file_escaped }}.*-p.*wa\""
      register: audit_rule_check
      failed_when: false

    - name: Fail if the audit rule for sudo log file is not applied
      fail:
        msg: "Audit rule for sudo log file is not properly applied"
      when: audit_rule_check.stdout == ""

    - name: Re-enable immutable mode if it was previously enabled
      command: auditctl -e 1
      when: audit_immutable == 1

  handlers:

    - name: Reload sudoers
      command: "visudo -c"

    - name: Revert SELinux to enforcing
      command: setenforce 1
      when: selinux_status.stdout == "Enforcing"
