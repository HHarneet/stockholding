---
- name: Ensure successful file system mounts are collected 
  hosts: all
  become: true
  vars:
    audit_mounts_rules_file: /etc/audit/rules.d/50-mounts.rules

  tasks:

    - name: Get UID_MIN value from /etc/login.defs
      command: awk '/^\s*UID_MIN/ { print $2 }' /etc/login.defs
      register: uid_min_result
      changed_when: false

    - name: Fail if UID_MIN is not found
      fail:
        msg: "UID_MIN is not defined in /etc/login.defs. Cannot continue."
      when: uid_min_result.stdout == ""

    - name: Ensure audit rule for b32 mount syscall is present
      lineinfile:
        path: "{{ audit_mounts_rules_file }}"
        line: "-a always,exit -F arch=b32 -S mount -F auid>=${UID_MIN} -F auid!=unset -k mounts"
        create: yes
        mode: '0640'
        state: present
      vars:
        UID_MIN: "{{ uid_min_result.stdout }}"
      notify: Reload audit rules

    - name: Ensure audit rule for b64 mount syscall is present
      lineinfile:
        path: "{{ audit_mounts_rules_file }}"
        line: "-a always,exit -F arch=b64 -S mount -F auid>=${UID_MIN} -F auid!=unset -k mounts"
        create: yes
        mode: '0640'
        state: present
      vars:
        UID_MIN: "{{ uid_min_result.stdout }}"
      notify: Reload audit rules

    - name: Check if audit is in immutable mode (enabled 2)
      command: auditctl -s
      register: auditctl_status
      changed_when: false

    - name: Warn if audit is in immutable mode and reboot may be required
      debug:
        msg: "auditd is in immutable mode (enabled 2). A reboot is required to load new rules."
      when: "'enabled 2' in auditctl_status.stdout"

  handlers:

    - name: Reload audit rules
      command: augenrules --load
